//
//  MoviesFooterPresenter.swift
//  Movie Trailer App
//
//  Created Alonso Fabian Orozco Perez on 29/12/20.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by ___ORGANIZATIONNAME___
//

import Foundation

// MARK: View -
protocol MoviesTopViewProtocol: class {
    func showProgress()
    func hideProgress()
    func onMoviesLoaded(movies: [MovieListResultObject])
    func onRequestFailed(error: String)
}

// MARK: Presenter -
protocol MoviesFooterPresenterProtocol: class {
	var view: MoviesTopViewProtocol? { get set }
    func viewDidLoad()
    func loadMoviesData()
}

class MoviesFooterPresenter: MoviesFooterPresenterProtocol {
    
    weak var view: MoviesTopViewProtocol?
    
    private var interactor: MoviesTopInteractorProtocol?

    func viewDidLoad() {
        interactor = MoviesFooterInteractor()
    }
    
    func loadMoviesData() {
        self.view?.showProgress()
        self.interactor?.loadUpcommingMovies(completion: { (movies, error) in
            self.view?.hideProgress()
            if let serverError = error {
                //happy path is priority :) so i don't have to much validation for sad paths
                self.view?.onRequestFailed(error: serverError.localizedDescription)
            }else {
                let firstFiveUpcommingMovies = self.getFirstFiveUpcommingMovies(movies: movies)
                MTRealmManager.shared.addObjects(firstFiveUpcommingMovies)
                self.view?.onMoviesLoaded(movies: firstFiveUpcommingMovies)
            }
        })
    }
    
    private func getFirstFiveUpcommingMovies(movies: [MovieListResultObject]) -> [MovieListResultObject]
    {
        return Array(movies.prefix(5))
    }
}
