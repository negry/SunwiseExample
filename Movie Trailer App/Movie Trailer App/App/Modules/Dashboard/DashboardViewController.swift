//
//  DashboardViewController.swift
//  Movie Trailer App
//
//  Created Alonso Fabian Orozco Perez on 28/12/20.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by RocketKOR
//

import UIKit

class DashboardViewController: UIViewController
{
    @IBOutlet weak var dashTableView: UITableView!

	private var presenter: DashboardPresenterProtocol?
    
    private var popularMovies: [MovieRecord] = []
    private var topRateMovies: [MovieRecord] = []
    private var currentPageForPopularMovies: Int = 1
    private var currentPageForTopRateMovies: Int = 1
    
    final let popularSectionIndex = 0
    final let topRatedSectionIndex = 1

	override func viewDidLoad() {
        super.viewDidLoad()
        self.setupPresenter()
        self.configView()
        self.presenter?.getMovies(ofType: .popular, andPage: self.currentPageForPopularMovies)
        self.presenter?.getMovies(ofType: .topRated, andPage: self.currentPageForPopularMovies)
    }
    
    @IBAction func logoutAction(_ sender: UIButton)
    {
        MTRealmManager.shared.deleteObjs()
        DispatchQueue.main.async {
            self.navigationController?.popViewController(animated: true)
        }
    }
    
    private func configView()
    {
        self.dashTableView.delegate = self
        self.dashTableView.dataSource = self
        self.dashTableView.registerTableViewCell(withIdentifier: MovieTableViewCell.identifier)
    }
    
    private func setupPresenter()
    {
        self.presenter = DashboardPresenter()
        presenter?.view = self
        presenter?.viewDidLoad()
    }

}

extension DashboardViewController: DashboardViewProtocol
{
    func onRequestFailed(error: String) {
        MTAlertHelper.showCustomMessage(currentVC: self, message: error)
    }
    
    func showTableViewProgress() {
        DispatchQueue.main.async {
            self.dashTableView.activityIndicator(loadingInProgress: true)
        }
    }
    
    func hideTableViewProgress() {
        DispatchQueue.main.async {
            self.dashTableView.activityIndicator(loadingInProgress: false)
        }
    }
    
    func onMoviesLoaded(movies: [MovieRecord], movieTypeLoaded: MoviesType) {
        let sectionToReload = (movieTypeLoaded == .popular) ? self.popularSectionIndex : self.topRatedSectionIndex
        let indexSet: IndexSet = [sectionToReload]
        
        DispatchQueue.main.async {
            switch movieTypeLoaded {
            case .popular:
                self.popularMovies.append(contentsOf: movies)
                
            case .topRated:
                self.topRateMovies.append(contentsOf: movies)
            }
            
            self.dashTableView.reloadSections(indexSet, with: .fade)
        }
    }
    
    func showProgress()
    {
        
    }
    
    func hideProgress()
    {
        
    }
}


extension DashboardViewController: UITableViewDelegate
{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 2
    }
}

extension DashboardViewController: UITableViewDataSource
{
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        return UIView()
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let headerView = MovieTableViewHeader(frame: CGRect(origin: tableView.frame.origin, size: CGSize(width: tableView.frame.width, height: 50)))
        if section == self.popularSectionIndex {
            return headerView
        }else {
            headerView.titleLabel.text = "Mejor calificadas"
            return headerView
        }
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: MovieTableViewCell.identifier) as! MovieTableViewCell
        cell.sectionType = (indexPath.section == self.topRatedSectionIndex) ? .topRated : .popular
        cell.movies = (indexPath.section == self.topRatedSectionIndex) ? self.topRateMovies : self.popularMovies
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 50
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 270
    }
}
