//
//  DashboardPresenter.swift
//  Movie Trailer App
//
//  Created Alonso Fabian Orozco Perez on 28/12/20.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by ___ORGANIZATIONNAME___
//

import Foundation

// MARK: View -
protocol DashboardViewProtocol: class {
    func showProgress()
    func hideProgress()
    func onRequestFailed(error: String)
    func showTableViewProgress()
    func hideTableViewProgress()
    
    func onMoviesLoaded(movies: [MovieRecord], movieTypeLoaded: MoviesType)
}

// MARK: Presenter -
protocol DashboardPresenterProtocol: class {
	var view: DashboardViewProtocol? { get set }
    func viewDidLoad()
    func getMovies(ofType type: MoviesType, andPage page: Int)
}

class DashboardPresenter: DashboardPresenterProtocol {
    
    weak var view: DashboardViewProtocol?
    
    private var interactor: DashboardInteractorProtocol?
    private var movieCallQueue = OperationQueue()

    func viewDidLoad() {
        interactor = DashboardInteractor()
        movieCallQueue.name = "com.movie.Movie-Trailer-App.MoviesApiCallerOperationQueue"
        interactor?.queue = movieCallQueue
    }
    
    func getMovies(ofType type: MoviesType, andPage page: Int) {
        if page == 1 {
            view?.showTableViewProgress()
        }else {
            view?.showProgress()
        }
        
        interactor?.loadMoviesData(ofType: type, withPage: page, completion: { (movies, error) in
            if page == 1 {
                self.view?.hideTableViewProgress()
            }
            if let error = error {
                print(error)
                self.view?.onRequestFailed(error: error.localizedDescription)
            }else {
                self.view?.onMoviesLoaded(movies: movies, movieTypeLoaded: type)
            }
        })
    }
}
